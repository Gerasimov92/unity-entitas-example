//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameLoopEntity { get { return GetGroup(GameMatcher.GameLoop).GetSingleEntity(); } }
    public GameLoopComponent gameLoop { get { return gameLoopEntity.gameLoop; } }
    public bool hasGameLoop { get { return gameLoopEntity != null; } }

    public GameEntity SetGameLoop(GameState newState, GameEntity newCurrentPlayer, GameEntity newCurrentEnemy) {
        if (hasGameLoop) {
            throw new Entitas.EntitasException("Could not set GameLoop!\n" + this + " already has an entity with GameLoopComponent!",
                "You should check if the context already has a gameLoopEntity before setting it or use context.ReplaceGameLoop().");
        }
        var entity = CreateEntity();
        entity.AddGameLoop(newState, newCurrentPlayer, newCurrentEnemy);
        return entity;
    }

    public void ReplaceGameLoop(GameState newState, GameEntity newCurrentPlayer, GameEntity newCurrentEnemy) {
        var entity = gameLoopEntity;
        if (entity == null) {
            entity = SetGameLoop(newState, newCurrentPlayer, newCurrentEnemy);
        } else {
            entity.ReplaceGameLoop(newState, newCurrentPlayer, newCurrentEnemy);
        }
    }

    public void RemoveGameLoop() {
        gameLoopEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameLoopComponent gameLoop { get { return (GameLoopComponent)GetComponent(GameComponentsLookup.GameLoop); } }
    public bool hasGameLoop { get { return HasComponent(GameComponentsLookup.GameLoop); } }

    public void AddGameLoop(GameState newState, GameEntity newCurrentPlayer, GameEntity newCurrentEnemy) {
        var index = GameComponentsLookup.GameLoop;
        var component = (GameLoopComponent)CreateComponent(index, typeof(GameLoopComponent));
        component.state = newState;
        component.currentPlayer = newCurrentPlayer;
        component.currentEnemy = newCurrentEnemy;
        AddComponent(index, component);
    }

    public void ReplaceGameLoop(GameState newState, GameEntity newCurrentPlayer, GameEntity newCurrentEnemy) {
        var index = GameComponentsLookup.GameLoop;
        var component = (GameLoopComponent)CreateComponent(index, typeof(GameLoopComponent));
        component.state = newState;
        component.currentPlayer = newCurrentPlayer;
        component.currentEnemy = newCurrentEnemy;
        ReplaceComponent(index, component);
    }

    public void RemoveGameLoop() {
        RemoveComponent(GameComponentsLookup.GameLoop);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameLoop;

    public static Entitas.IMatcher<GameEntity> GameLoop {
        get {
            if (_matcherGameLoop == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameLoop);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameLoop = matcher;
            }

            return _matcherGameLoop;
        }
    }
}
